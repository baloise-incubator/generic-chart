{{- if .Values.enableServiceMesh }}
{{- $hostname := printf "%s-%s" (include "generic-chart.name" $) (include "generic-chart.host" $) }}
{{- range $key, $val := .Values.network }}
{{- if $val.enableIstioIngressGateway }}
{{- if not ( kindIs "invalid" $val.ingress ) }}
{{- if and (not $val.ingress.host) (not $.Values.ingress.clusterName) }}
{{- fail "either .network.{}.ingress.host or .ingress.clusterName must be set" }}
{{- end -}}
{{- if and (not $val.ingress.host) (gt (len $.Values.network) 1) }}
{{- fail ".ingress.clusterName only supported for single .network.{}.ingress" }}
{{- end }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ printf "%s" (include "generic-chart.name" $) }}
  labels:
{{ include "generic-chart.labels" $ | indent 4 }}
spec:
  hosts:
  - {{ if $val.ingress.host }}{{ $val.ingress.host }}{{ else }}{{ $hostname }}{{ end }}
  gateways:
   - {{ printf "%s" (include "generic-chart.name" $ ) }}
  http:
  - route:
    - destination:
        host: {{ printf "%s" (include "generic-chart.name" $) }}
        port:
          number: {{ $val.servicePort }}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ printf "%s" (include "generic-chart.name" $ ) }}
  labels:
{{ include "generic-chart.labels" $ | indent 4 }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
     number: 80
     name: {{ printf "%s" (include "generic-chart.name" $) }}
     protocol: HTTP
    hosts:
    - {{ if $val.ingress.host }}{{ $val.ingress.host }}{{ else }}{{ $hostname }}{{ end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
